% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{fit}
\alias{fit}
\title{Fit an EpiAware Model to Data}
\usage{
fit(model, data, method = nuts_sampler(), ...)
}
\arguments{
\item{model}{An \code{EpiProblem} object specifying the complete model.}

\item{data}{A data frame or list containing observed data. Must have a
column/element named \code{y_t} or \code{cases} with case counts.
Optionally can include \code{dates}.}

\item{method}{A sampler configuration object (e.g., from
\code{nuts_sampler}). Default: \code{nuts_sampler()}.}

\item{...}{Additional arguments (currently unused).}
}
\value{
An S3 object of class \code{epiaware_fit} containing:
\describe{
  \item{samples}{posterior::draws_df object with MCMC samples}
  \item{summary}{tibble with parameter summaries}
  \item{diagnostics}{tibble with convergence diagnostics (Rhat, ESS)}
  \item{generated_quantities}{List with generated quantities (Rt,
    infections, etc.)}
  \item{model}{The original EpiProblem}
  \item{data}{The data used for inference}
  \item{method}{The inference method used}
}
}
\description{
Performs Bayesian inference on an epidemiological model using MCMC sampling.
This function generates a Turing.jl model from the EpiProblem specification,
runs the specified inference method, and returns posterior samples with
diagnostics.
}
\examples{
\dontrun{
# Load data
data <- read.csv("south_korea_data.csv")
training_data <- data[45:80, ]

# Fit model
results <- fit(
  model = mishra_model,
  data = training_data,
  method = nuts_sampler(warmup = 1000, draws = 1000, chains = 4)
)

# Examine results
print(results)
summary(results)
plot(results, type = "Rt")
}

}
